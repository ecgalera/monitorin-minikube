AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  KeyName:
    Type: String
    Description: "The name of the SSH key pair to use"

Resources:
  # (Resto de recursos, como VPC, Subnet, etc. aquí)

  MyInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.medium"
      SecurityGroupIds: [ !Ref MySecurityGroup ]
      SubnetId: !Ref MySubnet
      ImageId: "ami-0866a3c8686eaeeba" # Ubuntu 20.04 LTS (Reemplaza según región)
      KeyName: !Ref KeyName
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -e
          echo "Configuración inicial de Minikube y Kubernetes" > /var/log/user-data.log

          # Actualizar sistema
          apt-get update -y
          apt-get upgrade -y

          # Instalar Docker
          apt-get install -y docker.io
          systemctl start docker
          systemctl enable docker
          usermod -aG docker ubuntu

          # Instalar kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/

          # Instalar Minikube
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          install minikube-linux-amd64 /usr/local/bin/minikube

          # Iniciar Minikube
          minikube start --driver=docker

          # Esperar a que Minikube esté completamente listo
          echo "Esperando a que Minikube inicie..."
          until minikube status | grep -q "Host: Running"; do
            echo "Minikube aún no está listo, esperando..."
            sleep 10
          done

          # Verificar estado de Minikube
          echo "Minikube está listo!"

          # Crear namespace para monitoring
          kubectl create namespace monitoring

          # Crear directorio para los manifiestos (si no existe)
          mkdir -p /home/ubuntu/manifests

          # Asegurarse de que el usuario 'ubuntu' tenga permisos en el directorio
          sudo chown ubuntu:ubuntu /home/ubuntu/manifests

          # Crear archivos YAML con los manifiestos de Kubernetes
          cat <<EOF > /home/ubuntu/manifests/nginx.yml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx
            namespace: monitoring
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: nginx
            template:
              metadata:
                labels:
                  app: nginx
              spec:
                containers:
                - image: nginx:latest
                  name: nginx
                  ports:
                  - containerPort: 80
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx
            namespace: monitoring
          spec:
            ports:
            - port: 80
              targetPort: 80
            selector:
              app: nginx
            type: NodePort
          EOF

          cat <<EOF > /home/ubuntu/manifests/grafana.yml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: grafana
            namespace: monitoring
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: grafana
            template:
              metadata:
                labels:
                  app: grafana
              spec:
                containers:
                - image: grafana/grafana:latest
                  name: grafana
                  ports:
                  - containerPort: 3000
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: grafana
            namespace: monitoring
          spec:
            ports:
            - port: 3000
              targetPort: 3000
            selector:
              app: grafana
            type: NodePort
          EOF

          cat <<EOF > /home/ubuntu/manifests/prometheus.yml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: prometheus
            namespace: monitoring
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: prometheus
            template:
              metadata:
                labels:
                  app: prometheus
              spec:
                containers:
                - image: prom/prometheus:latest
                  name: prometheus
                  ports:
                  - containerPort: 9090
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: prometheus
            namespace: monitoring
          spec:
            ports:
            - port: 9090
              targetPort: 9090
            selector:
              app: prometheus
            type: NodePort
          EOF

          # Aplicar manifiestos de Kubernetes
          kubectl apply -f /home/ubuntu/manifests/

          echo "Cluster y servicios configurados correctamente" >> /var/log/user-data.log
